[

  {
   "code": "address.net.mail",
   "description": "E-mail address.",
   "transform": "(code)",
   "pattern": "/^(?:[a-z0-9_.+-]+@(?:[a-z0-9_-]+\\.)*[a-z0-9-]+\\.[a-z0-9]+)?$/s",

   "exception":
    {
     "code": "validation.rule.address.net.mail",
     "exception": "Must be a valid e-mail address."
    }
  },

  {
   "code": "address.net.uri",
   "description": "URI.",
   "pattern": "/^(?:[0-9a-z.+-]+:[\\w~!@#%$&*()[\\]{}_=+';:,./?-]+)?$/is",

   "exception":
    {
     "code": "validation.rule.address.net.uri",
     "exception": "Must be a valid URI."
    }
  },

  {
   "code": "address.net.http.insecure",
   "description": "HTTP URL.",
   "transform": "(code)",
   "pattern": "/^(?:https?:\\/\\/[\\w~!@#%$&*()[\\]{}_=+';:,./?-]+)?$/is",

   "exception":
    {
     "code": "validation.rule.address.net.http.insecure",
     "exception": "Must be a valid HTTP URL."
    }
  },

  {
   "code": "address.net.http.secure",
   "description": "HTTPS URL.",
   "transform": "(code)",
   "pattern": "/^(?:https:\\/\\/[\\w~!@#%$&*()[\\]{}_=+';:,./?-]+)?$/is",

   "exception":
    {
     "code": "validation.rule.address.net.http.secure",
     "exception": "Must be a valid HTTPS URL."
    }
  },

  {
   "code": "address.net.http.path.relaxed",
   "description": "HTTP / HTTPS URL or relative path (relaxed).",
   "transform": "(code)",
   "pattern": "/^((?=^https?:)|(?![a-z.+-]*:))[/%0-9a-z `~!@#$%^&()_=+[\\]{}:;',.-]*$/isu",

   "exception":
    {
     "code": "validation.rule.address.net.http.path.relaxed",
     "exception": "Must be a HTTP / HTTPS URL or relative path."
    }
  },

  {
   "code": "address.net.http.path.strict",
   "description": "Path (strict).",
   "transform": "(code)",
   "pattern": "/^[/%0-9a-z_.]*$/isu",

   "exception":
    {
     "code": "validation.rule.address.net.http.path.strict",
     "exception": "Path may only contain valid characters."
    }
  },

  {
   "code": "address.net.tele.relaxed",
   "description": "Tele (phone / fax) number.",
   "transform": "(code)",
   "pattern": "/^(\\+[1-9])?[0-9 ]*$/s",

   "exception":
    {
     "code": "validation.rule.address.net.tele.relaxed",
     "exception": "Must be a valid telephone number."
    }
  },

  {
   "code": "address.net.tele.nld",
   "description": "Tele (phone / fax) number, Dutch.",
   "transform": "(code)",
   "pattern": "/^(?:0[1-9](\\s?[0-9]){8})?$/s",

   "exception":
    {
     "code": "validation.rule.address.net.tele.nld",
     "exception": "Must be a valid Dutch telephone number containing 10 digits, starting with a 0."
    }
  },

  {
   "code": "address.net.fqdn",
   "description": "Fully Qualified Domain Name (FQDN).",
   "transform": "(code)",
   "pattern": "/^(?:(?:[0-9a-z_-]+\\.)*[0-9a-z_-]+)?$/is",

   "exception":
    {
     "code": "validation.rule.address.net.fqdn",
     "exception": "Must be a fully qualified domain name (FQDN)."
    }
  },

  {
   "code": "address.physical.postal_code.relaxed",
   "description": "Postal code.",
   "transform": "(code)",
   "pattern": "/^[A-Z0-9 ]*$/",

   "exception":
    {
     "code": "validation.rule.address.physical.postal_code.relaxed",
     "exception": "Must be a valid postal code. E.g., 9999 AA."
    }
  },

  {
   "code": "address.physical.postal_code.nld",
   "description": "Postal code, Dutch.",
   "transform": "(code)",
   "pattern": "/^(?:[0-9]{4}\\s[A-Z]{2})?$/",

   "exception":
    {
     "code": "validation.rule.address.physical.postal_code.nld",
     "exception": "Must be a valid postal code. E.g., 9999 AA."
    }
  },

  {
   "code": "array",
   "description": "Require an array to have X items.",
   "test": "(code)"
  },

  {
   "code": "bank.bic",
   "description": "Bank Identification Code (BIC-8 & BIC-11).",
   "transform": "(code)",
   "pattern": "/^(?:[a-z]{6}(?:[a-z0-9]{2}|[a-z0-9]{5}))?$/is",

   "exception":
    {
     "code": "validation.rule.bank.bic",
     "exception": "Must be a valid Bank Identification Code (BIC)."
    }
  },

  {
   "code": "condition",
   "description": "A meta-validation rule for conditions.",
   "test": "(code)"
  },

  {
   "code": "date_only",
   "description": "Ensure `Date` is UTC 12:00 hours.",
   "transform": "(code)"
  },

  {
   "code": "encoding.base64",
   "description": "Base64 encoding.",
   "pattern": "/^[a-zA-Z0-9\\s+/=,_-]*$/s",

   "exception":
    {
     "code": "validation.rule.encoding.base64",
     "exception": "Must be a valid base64 encoded string."
    }
  },

  {
   "code": "enum",
   "description": "Enumeration type.",
   "test": "(code)"
  },

  {
   "code": "file.path.relaxed",
   "description": "Path (relaxed).",
   "transform": "(code)",
   "pattern": "/^[/\\u{0080}-\\u{00FF}\\u{0100}-\\u{017F}\\u{0180}-\\u{024F}\\u{0250}-\\u{02AF}\\u{02B0}-\\u{02FF}\\u{0370}-\\u{03FF}\\u{0400}-\\u{04FF}\\u{0500}-\\u{052F}\\u{0530}-\\u{058F}\\u{0590}-\\u{05FF}\\u{0600}-\\u{06FF}\\u{0700}-\\u{074F}\\u{0750}-\\u{077F}\\u{0780}-\\u{07BF}\\u{07C0}-\\u{07FF}\\u{0800}-\\u{083F}\\u{0840}-\\u{085F}\\u{0860}-\\u{086F}\\u{0870}-\\u{089F}\\u{08A0}-\\u{08FF}\\u{0900}-\\u{097F}\\u{0980}-\\u{09FF}\\u{0A00}-\\u{0A7F}\\u{0A80}-\\u{0AFF}\\u{0B00}-\\u{0B7F}\\u{0B80}-\\u{0BFF}\\u{0C00}-\\u{0C7F}\\u{0C80}-\\u{0CFF}\\u{0D00}-\\u{0D7F}\\u{0D80}-\\u{0DFF}\\u{0E00}-\\u{0E7F}\\u{0E80}-\\u{0EFF}\\u{0F00}-\\u{0FFF}\\u{1000}-\\u{109F}\\u{10A0}-\\u{10FF}\\u{1100}-\\u{11FF}\\u{1200}-\\u{137F}\\u{1380}-\\u{139F}\\u{13A0}-\\u{13FF}\\u{1400}-\\u{167F}\\u{1680}-\\u{169F}\\u{16A0}-\\u{16FF}\\u{1700}-\\u{171F}\\u{1720}-\\u{173F}\\u{1740}-\\u{175F}\\u{1760}-\\u{177F}\\u{1780}-\\u{17FF}\\u{1800}-\\u{18AF}\\u{18B0}-\\u{18FF}\\u{1900}-\\u{194F}\\u{1950}-\\u{197F}\\u{1980}-\\u{19DF}\\u{19E0}-\\u{19FF}\\u{1A00}-\\u{1A1F}\\u{1A20}-\\u{1AAF}\\u{1B00}-\\u{1B7F}\\u{1B80}-\\u{1BBF}\\u{1BC0}-\\u{1BFF}\\u{1C00}-\\u{1C4F}\\u{1C50}-\\u{1C7F}\\u{1C80}-\\u{1C8F}\\u{1C90}-\\u{1CBF}\\u{1CC0}-\\u{1CCF}\\u{1CD0}-\\u{1CFF}\\u{1D00}-\\u{1D7F}\\u{1D80}-\\u{1DBF}\\u{1E00}-\\u{1EFF}\\u{1F00}-\\u{1FFF}\\u{2000}-\\u{206F}\\u{2070}-\\u{209F}\\u{20A0}-\\u{20CF}\\u{2150}-\\u{218F}\\u{2460}-\\u{24FF}\\u{2580}-\\u{259F}\\u{25A0}-\\u{25FF}\\u{2700}-\\u{27BF}\\u{2800}-\\u{28FF}\\u{2C00}-\\u{2C5F}\\u{2C60}-\\u{2C7F}\\u{2C80}-\\u{2CFF}\\u{2D00}-\\u{2D2F}\\u{2D30}-\\u{2D7F}\\u{2D80}-\\u{2DDF}\\u{2DE0}-\\u{2DFF}\\u{2E00}-\\u{2E7F}\\u{2E80}-\\u{2EFF}\\u{2F00}-\\u{2FDF}\\u{2FF0}-\\u{2FFF}\\u{3000}-\\u{303F}\\u{3040}-\\u{309F}\\u{30A0}-\\u{30FF}\\u{3100}-\\u{312F}\\u{3130}-\\u{318F}\\u{3190}-\\u{319F}\\u{31A0}-\\u{31BF}\\u{31C0}-\\u{31EF}\\u{31F0}-\\u{31FF}\\u{3200}-\\u{32FF}\\u{3300}-\\u{33FF}\\u{3400}-\\u{4DBF}\\u{4DC0}-\\u{4DFF}\\u{4E00}-\\u{9FFF}\\u{A000}-\\u{A48F}\\u{A490}-\\u{A4CF}\\u{A4D0}-\\u{A4FF}\\u{A500}-\\u{A63F}\\u{A640}-\\u{A69F}\\u{A6A0}-\\u{A6FF}\\u{A700}-\\u{A71F}\\u{A720}-\\u{A7FF}\\u{A800}-\\u{A82F}\\u{A830}-\\u{A83F}\\u{A840}-\\u{A87F}\\u{A880}-\\u{A8DF}\\u{A8E0}-\\u{A8FF}\\u{A900}-\\u{A92F}\\u{A930}-\\u{A95F}\\u{A960}-\\u{A97F}\\u{A980}-\\u{A9DF}\\u{A9E0}-\\u{A9FF}\\u{AA00}-\\u{AA5F}\\u{AA60}-\\u{AA7F}\\u{AA80}-\\u{AADF}\\u{AAE0}-\\u{AAFF}\\u{AB00}-\\u{AB2F}\\u{AB30}-\\u{AB6F}\\u{AB70}-\\u{ABBF}\\u{ABC0}-\\u{ABFF}\\u{AC00}-\\u{D7AF}\\u{D7B0}-\\u{D7FF}\\u{D800}-\\u{DB7F}\\u{DB80}-\\u{DBFF}\\u{DC00}-\\u{DFFF}\\u{F900}-\\u{FAFF}\\u{FB00}-\\u{FB4F}\\u{FB50}-\\u{FDFF}\\u{FE00}-\\u{FE0F}\\u{FE10}-\\u{FE1F}\\u{FE30}-\\u{FE4F}\\u{FE50}-\\u{FE6F}\\u{FE70}-\\u{FEFF}\\u{FF00}-\\u{FFEF}\\u{10100}-\\u{1013F}\\u{10140}-\\u{1018F}\\u{101D0}-\\u{101FF}\\u{10280}-\\u{1029F}\\u{102A0}-\\u{102DF}\\u{102E0}-\\u{102FF}\\u{10330}-\\u{1034F}\\u{10380}-\\u{1039F}\\u{10400}-\\u{1044F}\\u{10450}-\\u{1047F}\\u{10480}-\\u{104AF}\\u{104B0}-\\u{104FF}\\u{10500}-\\u{1052F}\\u{10530}-\\u{1056F}\\u{10570}-\\u{105BF}\\u{10780}-\\u{107BF}\\u{10800}-\\u{1083F}\\u{10840}-\\u{1085F}\\u{10860}-\\u{1087F}\\u{10880}-\\u{108AF}\\u{108E0}-\\u{108FF}\\u{10900}-\\u{1091F}\\u{10920}-\\u{1093F}\\u{10980}-\\u{1099F}\\u{109A0}-\\u{109FF}\\u{10A00}-\\u{10A5F}\\u{10AC0}-\\u{10AFF}\\u{10B00}-\\u{10B3F}\\u{10B40}-\\u{10B5F}\\u{10B60}-\\u{10B7F}\\u{10B80}-\\u{10BAF}\\u{10D00}-\\u{10D3F}\\u{10E60}-\\u{10E7F}\\u{10E80}-\\u{10EBF}\\u{10EC0}-\\u{10EFF}\\u{10F30}-\\u{10F6F}\\u{10FB0}-\\u{10FDF}\\u{10FE0}-\\u{10FFF}\\u{11000}-\\u{1107F}\\u{11080}-\\u{110CF}\\u{110D0}-\\u{110FF}\\u{11100}-\\u{1114F}\\u{11150}-\\u{1117F}\\u{11180}-\\u{111DF}\\u{111E0}-\\u{111FF}\\u{11200}-\\u{1124F}\\u{11280}-\\u{112AF}\\u{112B0}-\\u{112FF}\\u{11300}-\\u{1137F}\\u{11400}-\\u{1147F}\\u{11480}-\\u{114DF}\\u{11580}-\\u{115FF}\\u{11600}-\\u{1165F}\\u{11660}-\\u{1167F}\\u{11680}-\\u{116CF}\\u{11700}-\\u{1174F}\\u{11800}-\\u{1184F}\\u{118A0}-\\u{118FF}\\u{11900}-\\u{1195F}\\u{119A0}-\\u{119FF}\\u{11A00}-\\u{11A4F}\\u{11A50}-\\u{11AAF}\\u{11AB0}-\\u{11ABF}\\u{11AC0}-\\u{11AFF}\\u{11B00}-\\u{11B5F}\\u{11C00}-\\u{11C6F}\\u{11C70}-\\u{11CBF}\\u{11D00}-\\u{11D5F}\\u{11D60}-\\u{11DAF}\\u{11EE0}-\\u{11EFF}\\u{11F00}-\\u{11F5F}\\u{11FB0}-\\u{11FBF}\\u{11FC0}-\\u{11FFF}\\u{12000}-\\u{123FF}\\u{12400}-\\u{1247F}\\u{12480}-\\u{1254F}\\u{12F90}-\\u{12FFF}\\u{13000}-\\u{1342F}\\u{13430}-\\u{1345F}\\u{14400}-\\u{1467F}\\u{16800}-\\u{16A3F}\\u{16A40}-\\u{16A6F}\\u{16A70}-\\u{16ACF}\\u{16AD0}-\\u{16AFF}\\u{16B00}-\\u{16B8F}\\u{16E40}-\\u{16E9F}\\u{16F00}-\\u{16F9F}\\u{16FE0}-\\u{16FFF}\\u{17000}-\\u{187FF}\\u{18800}-\\u{18AFF}\\u{18B00}-\\u{18CFF}\\u{18D00}-\\u{18D7F}\\u{1AFF0}-\\u{1AFFF}\\u{1B000}-\\u{1B0FF}\\u{1B100}-\\u{1B12F}\\u{1B130}-\\u{1B16F}\\u{1B170}-\\u{1B2FF}\\u{1BC00}-\\u{1BC9F}\\u{1BCA0}-\\u{1BCAF}\\u{1D2C0}-\\u{1D2DF}\\u{1D2E0}-\\u{1D2FF}\\u{1D300}-\\u{1D35F}\\u{1D360}-\\u{1D37F}\\u{1D800}-\\u{1DAAF}\\u{1DF00}-\\u{1DFFF}\\u{1E000}-\\u{1E02F}\\u{1E030}-\\u{1E08F}\\u{1E100}-\\u{1E14F}\\u{1E290}-\\u{1E2BF}\\u{1E2C0}-\\u{1E2FF}\\u{1E4D0}-\\u{1E4FF}\\u{1E7E0}-\\u{1E7FF}\\u{1E800}-\\u{1E8DF}\\u{1E900}-\\u{1E95F}\\u{1EC70}-\\u{1ECBF}\\u{1ED00}-\\u{1ED4F}\\u{1F000}-\\u{1F02F}\\u{1F030}-\\u{1F09F}\\u{1F100}-\\u{1F1FF}\\u{1F200}-\\u{1F2FF}\\u{1F650}-\\u{1F67F}\\u{1F780}-\\u{1F7FF}\\u{1F900}-\\u{1F9FF}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B73F}\\u{2B740}-\\u{2B81F}\\u{2B820}-\\u{2CEAF}\\u{2CEB0}-\\u{2EBEF}\\u{2EBF0}-\\u{2EE5F}\\u{2F800}-\\u{2FA1F}\\u{30000}-\\u{3134F}\\u{31350}-\\u{323AF}\\u{E0100}-\\u{E01EF}0-9a-z `~!@#$%^&()_=+[\\]{};',.-]*$/isu",

   "exception":
    {
     "code": "validation.rule.file.path.relaxed",
     "exception": "Path may only contain valid characters."
    },

   "test": "(code)"
  },

  {
   "code": "file.path.strict",
   "description": "Path (strict).",
   "transform": "(code)",
   "pattern": "/^[/\\p{L}\\p{N}_.]*$/isu",

   "exception":
    {
     "code": "validation.rule.file.path.strict",
     "exception": "Path may only contain valid characters."
    },

   "test": "(code)"
  },

  {
   "code": "file.name.relaxed",
   "description": "File name (relaxed).",
   "transform": "(code)",
   "pattern": "/^[\\u{0080}-\\u{00FF}\\u{0100}-\\u{017F}\\u{0180}-\\u{024F}\\u{0250}-\\u{02AF}\\u{02B0}-\\u{02FF}\\u{0370}-\\u{03FF}\\u{0400}-\\u{04FF}\\u{0500}-\\u{052F}\\u{0530}-\\u{058F}\\u{0590}-\\u{05FF}\\u{0600}-\\u{06FF}\\u{0700}-\\u{074F}\\u{0750}-\\u{077F}\\u{0780}-\\u{07BF}\\u{07C0}-\\u{07FF}\\u{0800}-\\u{083F}\\u{0840}-\\u{085F}\\u{0860}-\\u{086F}\\u{0870}-\\u{089F}\\u{08A0}-\\u{08FF}\\u{0900}-\\u{097F}\\u{0980}-\\u{09FF}\\u{0A00}-\\u{0A7F}\\u{0A80}-\\u{0AFF}\\u{0B00}-\\u{0B7F}\\u{0B80}-\\u{0BFF}\\u{0C00}-\\u{0C7F}\\u{0C80}-\\u{0CFF}\\u{0D00}-\\u{0D7F}\\u{0D80}-\\u{0DFF}\\u{0E00}-\\u{0E7F}\\u{0E80}-\\u{0EFF}\\u{0F00}-\\u{0FFF}\\u{1000}-\\u{109F}\\u{10A0}-\\u{10FF}\\u{1100}-\\u{11FF}\\u{1200}-\\u{137F}\\u{1380}-\\u{139F}\\u{13A0}-\\u{13FF}\\u{1400}-\\u{167F}\\u{1680}-\\u{169F}\\u{16A0}-\\u{16FF}\\u{1700}-\\u{171F}\\u{1720}-\\u{173F}\\u{1740}-\\u{175F}\\u{1760}-\\u{177F}\\u{1780}-\\u{17FF}\\u{1800}-\\u{18AF}\\u{18B0}-\\u{18FF}\\u{1900}-\\u{194F}\\u{1950}-\\u{197F}\\u{1980}-\\u{19DF}\\u{19E0}-\\u{19FF}\\u{1A00}-\\u{1A1F}\\u{1A20}-\\u{1AAF}\\u{1B00}-\\u{1B7F}\\u{1B80}-\\u{1BBF}\\u{1BC0}-\\u{1BFF}\\u{1C00}-\\u{1C4F}\\u{1C50}-\\u{1C7F}\\u{1C80}-\\u{1C8F}\\u{1C90}-\\u{1CBF}\\u{1CC0}-\\u{1CCF}\\u{1CD0}-\\u{1CFF}\\u{1D00}-\\u{1D7F}\\u{1D80}-\\u{1DBF}\\u{1E00}-\\u{1EFF}\\u{1F00}-\\u{1FFF}\\u{2000}-\\u{206F}\\u{2070}-\\u{209F}\\u{20A0}-\\u{20CF}\\u{2150}-\\u{218F}\\u{2460}-\\u{24FF}\\u{2580}-\\u{259F}\\u{25A0}-\\u{25FF}\\u{2700}-\\u{27BF}\\u{2800}-\\u{28FF}\\u{2C00}-\\u{2C5F}\\u{2C60}-\\u{2C7F}\\u{2C80}-\\u{2CFF}\\u{2D00}-\\u{2D2F}\\u{2D30}-\\u{2D7F}\\u{2D80}-\\u{2DDF}\\u{2DE0}-\\u{2DFF}\\u{2E00}-\\u{2E7F}\\u{2E80}-\\u{2EFF}\\u{2F00}-\\u{2FDF}\\u{2FF0}-\\u{2FFF}\\u{3000}-\\u{303F}\\u{3040}-\\u{309F}\\u{30A0}-\\u{30FF}\\u{3100}-\\u{312F}\\u{3130}-\\u{318F}\\u{3190}-\\u{319F}\\u{31A0}-\\u{31BF}\\u{31C0}-\\u{31EF}\\u{31F0}-\\u{31FF}\\u{3200}-\\u{32FF}\\u{3300}-\\u{33FF}\\u{3400}-\\u{4DBF}\\u{4DC0}-\\u{4DFF}\\u{4E00}-\\u{9FFF}\\u{A000}-\\u{A48F}\\u{A490}-\\u{A4CF}\\u{A4D0}-\\u{A4FF}\\u{A500}-\\u{A63F}\\u{A640}-\\u{A69F}\\u{A6A0}-\\u{A6FF}\\u{A700}-\\u{A71F}\\u{A720}-\\u{A7FF}\\u{A800}-\\u{A82F}\\u{A830}-\\u{A83F}\\u{A840}-\\u{A87F}\\u{A880}-\\u{A8DF}\\u{A8E0}-\\u{A8FF}\\u{A900}-\\u{A92F}\\u{A930}-\\u{A95F}\\u{A960}-\\u{A97F}\\u{A980}-\\u{A9DF}\\u{A9E0}-\\u{A9FF}\\u{AA00}-\\u{AA5F}\\u{AA60}-\\u{AA7F}\\u{AA80}-\\u{AADF}\\u{AAE0}-\\u{AAFF}\\u{AB00}-\\u{AB2F}\\u{AB30}-\\u{AB6F}\\u{AB70}-\\u{ABBF}\\u{ABC0}-\\u{ABFF}\\u{AC00}-\\u{D7AF}\\u{D7B0}-\\u{D7FF}\\u{D800}-\\u{DB7F}\\u{DB80}-\\u{DBFF}\\u{DC00}-\\u{DFFF}\\u{F900}-\\u{FAFF}\\u{FB00}-\\u{FB4F}\\u{FB50}-\\u{FDFF}\\u{FE00}-\\u{FE0F}\\u{FE10}-\\u{FE1F}\\u{FE30}-\\u{FE4F}\\u{FE50}-\\u{FE6F}\\u{FE70}-\\u{FEFF}\\u{FF00}-\\u{FFEF}\\u{10100}-\\u{1013F}\\u{10140}-\\u{1018F}\\u{101D0}-\\u{101FF}\\u{10280}-\\u{1029F}\\u{102A0}-\\u{102DF}\\u{102E0}-\\u{102FF}\\u{10330}-\\u{1034F}\\u{10380}-\\u{1039F}\\u{10400}-\\u{1044F}\\u{10450}-\\u{1047F}\\u{10480}-\\u{104AF}\\u{104B0}-\\u{104FF}\\u{10500}-\\u{1052F}\\u{10530}-\\u{1056F}\\u{10570}-\\u{105BF}\\u{10780}-\\u{107BF}\\u{10800}-\\u{1083F}\\u{10840}-\\u{1085F}\\u{10860}-\\u{1087F}\\u{10880}-\\u{108AF}\\u{108E0}-\\u{108FF}\\u{10900}-\\u{1091F}\\u{10920}-\\u{1093F}\\u{10980}-\\u{1099F}\\u{109A0}-\\u{109FF}\\u{10A00}-\\u{10A5F}\\u{10AC0}-\\u{10AFF}\\u{10B00}-\\u{10B3F}\\u{10B40}-\\u{10B5F}\\u{10B60}-\\u{10B7F}\\u{10B80}-\\u{10BAF}\\u{10D00}-\\u{10D3F}\\u{10E60}-\\u{10E7F}\\u{10E80}-\\u{10EBF}\\u{10EC0}-\\u{10EFF}\\u{10F30}-\\u{10F6F}\\u{10FB0}-\\u{10FDF}\\u{10FE0}-\\u{10FFF}\\u{11000}-\\u{1107F}\\u{11080}-\\u{110CF}\\u{110D0}-\\u{110FF}\\u{11100}-\\u{1114F}\\u{11150}-\\u{1117F}\\u{11180}-\\u{111DF}\\u{111E0}-\\u{111FF}\\u{11200}-\\u{1124F}\\u{11280}-\\u{112AF}\\u{112B0}-\\u{112FF}\\u{11300}-\\u{1137F}\\u{11400}-\\u{1147F}\\u{11480}-\\u{114DF}\\u{11580}-\\u{115FF}\\u{11600}-\\u{1165F}\\u{11660}-\\u{1167F}\\u{11680}-\\u{116CF}\\u{11700}-\\u{1174F}\\u{11800}-\\u{1184F}\\u{118A0}-\\u{118FF}\\u{11900}-\\u{1195F}\\u{119A0}-\\u{119FF}\\u{11A00}-\\u{11A4F}\\u{11A50}-\\u{11AAF}\\u{11AB0}-\\u{11ABF}\\u{11AC0}-\\u{11AFF}\\u{11B00}-\\u{11B5F}\\u{11C00}-\\u{11C6F}\\u{11C70}-\\u{11CBF}\\u{11D00}-\\u{11D5F}\\u{11D60}-\\u{11DAF}\\u{11EE0}-\\u{11EFF}\\u{11F00}-\\u{11F5F}\\u{11FB0}-\\u{11FBF}\\u{11FC0}-\\u{11FFF}\\u{12000}-\\u{123FF}\\u{12400}-\\u{1247F}\\u{12480}-\\u{1254F}\\u{12F90}-\\u{12FFF}\\u{13000}-\\u{1342F}\\u{13430}-\\u{1345F}\\u{14400}-\\u{1467F}\\u{16800}-\\u{16A3F}\\u{16A40}-\\u{16A6F}\\u{16A70}-\\u{16ACF}\\u{16AD0}-\\u{16AFF}\\u{16B00}-\\u{16B8F}\\u{16E40}-\\u{16E9F}\\u{16F00}-\\u{16F9F}\\u{16FE0}-\\u{16FFF}\\u{17000}-\\u{187FF}\\u{18800}-\\u{18AFF}\\u{18B00}-\\u{18CFF}\\u{18D00}-\\u{18D7F}\\u{1AFF0}-\\u{1AFFF}\\u{1B000}-\\u{1B0FF}\\u{1B100}-\\u{1B12F}\\u{1B130}-\\u{1B16F}\\u{1B170}-\\u{1B2FF}\\u{1BC00}-\\u{1BC9F}\\u{1BCA0}-\\u{1BCAF}\\u{1D2C0}-\\u{1D2DF}\\u{1D2E0}-\\u{1D2FF}\\u{1D300}-\\u{1D35F}\\u{1D360}-\\u{1D37F}\\u{1D800}-\\u{1DAAF}\\u{1DF00}-\\u{1DFFF}\\u{1E000}-\\u{1E02F}\\u{1E030}-\\u{1E08F}\\u{1E100}-\\u{1E14F}\\u{1E290}-\\u{1E2BF}\\u{1E2C0}-\\u{1E2FF}\\u{1E4D0}-\\u{1E4FF}\\u{1E7E0}-\\u{1E7FF}\\u{1E800}-\\u{1E8DF}\\u{1E900}-\\u{1E95F}\\u{1EC70}-\\u{1ECBF}\\u{1ED00}-\\u{1ED4F}\\u{1F000}-\\u{1F02F}\\u{1F030}-\\u{1F09F}\\u{1F100}-\\u{1F1FF}\\u{1F200}-\\u{1F2FF}\\u{1F650}-\\u{1F67F}\\u{1F780}-\\u{1F7FF}\\u{1F900}-\\u{1F9FF}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B73F}\\u{2B740}-\\u{2B81F}\\u{2B820}-\\u{2CEAF}\\u{2CEB0}-\\u{2EBEF}\\u{2EBF0}-\\u{2EE5F}\\u{2F800}-\\u{2FA1F}\\u{30000}-\\u{3134F}\\u{31350}-\\u{323AF}\\u{E0100}-\\u{E01EF}0-9a-z `~!@#$%^&()_=+[\\]{};',.-]*$/isu",

   "exception":
    {
     "code": "validation.rule.file.name.relaxed",
     "exception": "File name may only contain valid characters."
    },

   "test": "(code)"
  },

  {
   "code": "file.name.strict",
   "description": "File name (strict).",
   "transform": "(code)",
   "pattern": "/^[\\p{L}\\p{N}_.]*$/isu",

   "exception":
    {
     "code": "validation.rule.file.name.strict",
     "exception": "Path may only contain valid characters."
    },

   "test": "(code)"
  },

  {
   "code": "form.element.value",
   "description": "Form element value.",
   "test": "(code)"
  },

  {
   "code": "gender",
   "description": "Gender ('female', 'male', 'unknown').",
   "transform": "(code)",
   "pattern": "/^(?:female|male|unknown)?$/is",

   "exception":
    {
     "code": "validation.rule.gender",
     "exception": "Gender must have value 'female', 'male', or 'unknown'."
    }
  },

  {
   "code": "html.color.hexadecimal",
   "description": "HTML color in hexadecimal format ('#rrggbb').",
   "transform": "(code)",
   "pattern": "/^(?:#[0-9a-f]{6})?$/is",

   "exception":
    {
     "code": "validation.rule.html.color.hexadecimal",
     "exception": "Must be a valid hexadecimal HTML color value (e.g. '#aabbcc')."
    }
  },

  {
   "code": "html.font.size",
   "description": "HTML font size (e.g. '12pt', '16px', '1em', etc).",
   "transform": "(code)",
   "pattern": "/^(?:[0-9]*\\.?[0-9]+(?:pt|px|r?em)?)?$/s",

   "exception":
    {
     "code": "validation.rule.html.font.size",
     "exception": "Must be a valid HTML font size expression (e.g. '12pt', '16px', '1em', etc)."
    }
  },

  {
   "code": "locale",
   "description": "Locale ('en_us').",
   "transform": "(code)",
   "pattern": "/^(?:[a-z]{2,3}(?:_[a-z]{2,3})?)?$/is",

   "exception":
    {
     "code": "validation.rule.locale",
     "exception": "Locale must consist of two or three letters, optionally followed by an underscore and two or three letters additional letters."
    },

   "test": "(code)"
  },

  {
   "code": "alphanumeric.snake_case.lowercase",
   "description": "snake_case, lower-case.",
   "transform": "(code)",
   "pattern": "/^[a-z0-9_]*$/s",

   "exception":
    {
     "code": "validation.rule.alphanumeric.snake_case.lowercase",
     "exception": "May only contain lower-case alphanumeric characters and underscores."
    }
  },

  {
   "code": "alphanumeric.snake_case.mixed_case",
   "description": "snake_case, mixed-case.",
   "pattern": "/^[a-z0-9_]*$/is",

   "exception":
    {
     "code": "validation.rule.alphanumeric.snake_case.mixed_case",
     "exception": "May only contain alphanumeric characters and underscores."
    }
  },

  {
   "code": "header",
   "description": "Header (HTTP, SMTP, etc).",
   "transform": "(code)",
   "pattern": "/^(?:[A-Z0-9][A-Za-z0-9]*(-[A-Z0-9][A-Za-z0-9]*)*)?$/s",

   "exception":
    {
     "code": "validation.rule.header",
     "exception": "May only contain alphanumeric characters and dashes."
    }
  },

  {
   "code": "alphanumeric.lowercase",
   "description": "Alphanumeric, lower-case.",
   "transform": "(code)",
   "pattern": "/^[a-z0-9]*$/s",

   "exception":
    {
     "code": "validation.rule.alphanumeric.lowercase",
     "exception": "May only contain alphanumeric characters."
    }
  },

  {
   "code": "variable.name",
   "description": "Variable name in the context of a programming language.",
   "pattern": "/^(?:[a-z_][a-z0-9_]*)?$/is",

   "exception":
    {
     "code": "validation.rule.variable.name",
     "exception": "May only contain alphanumeric characters and underscores, starting with a letter or underscore."
    }
  },

  {
   "code": "object.property.path.strict",
   "description": "Object property path in the context of an object-oriented programming language (strict).",
   "pattern": "/^(?:[a-z_][a-z0-9_]*(?:\\.[a-z_][a-z0-9_]*)*)?$/is",

   "exception":
    {
     "code": "validation.rule.object.property.path.strict",
     "exception": "May only contain alphanumeric characters, underscores, and dots, starting with a letter or underscore."
    }
  },

  {
   "code": "object.property.path.relaxed",
   "description": "Object property path in the context of an object-oriented programming language (relaxed).",
   "pattern": "/^(?:[a-z0-9_]+(?:\\.[a-z0-9_]+)*)?$/is",

   "exception":
    {
     "code": "validation.rule.object.property.path.relaxed",
     "exception": "May only contain alphanumeric characters, underscores, and dots."
    }
  },

  {
   "code": "resource.identifier",
   "description": "Resource identifier.",
   "transform": "(code)",
   "pattern": "/^[\\w/.+-]*$/is",

   "exception":
    {
     "code": "validation.rule.resource.identifier",
     "exception": "May only contain alphanumeric characters, dots, dashes, plus signs, underscores, and forward slashes."
    }
  },

  {
   "code": "event.code",
   "description": "Event code.",
   "pattern": "/^[\\w/.-]*$/is",

   "exception":
    {
     "code": "validation.rule.event.code",
     "exception": "May only contain alphanumeric characters, dots, dashes, underscores, and forward slashes."
    }
  },

  {
   "code": "country.code",
   "description": "description",
   "transform": "(code)",
   "pattern": "/(?:[A-Z]{2,3})?$/s",

   "exception":
    {
     "code": "validation.rule.country.code",
     "exception": "Must be a 3 letter (upper-case) ISO-3166 country code."
    },

   "test": "(code)"
  },

  {
   "code": "image.resolution.single",
   "description": "Image resolution in format <width>x<height> (e.g. '1920x1080').",
   "transform": "(code)",
   "pattern": "/^(?:[0-9]+x[0-9]+)?$/s",

   "exception":
    {
     "code": "validation.rule.image.resolution.single",
     "exception": "Must match <width>x<height> (e.g. '1920x1080' or '1280x720 1920x1080')."
    }
  },

  {
   "code": "image.resolution.multiple",
   "description": "Image resolutions (potentially multiple) in format <width>x<height>[ <width>x<height>] (e.g. '1920x1080' or '1280x720 1920x1080').",
   "transform": "(code)",
   "pattern": "/^(?:[0-9]+x[0-9]+)?(?: [0-9]+x[0-9]+)*$/s",

   "exception":
    {
     "code": "validation.rule.image.resolution.multiple",
     "exception": "Must match <width>x<height>[ <width>x<height>] (e.g. '1920x1080' or '1280x720 1920x1080')."
    }
  },

  {
   "code": "media.type",
   "description": "Media type.",
   "pattern": "/^(?:[\\w.-]+\\/[\\w.+-]+)?$/is",

   "exception":
    {
     "code": "validation.rule.media.type",
     "exception": "Must fit the media type format (e.g. 'image/jpeg')."
    }
  },

  {
   "code": "media.type.image.common",
   "description": "Media type, common images.",
   "pattern": "/^(?:image\\/(?:jpeg|webp|png|svg\\+xml))?$/is",

   "exception":
    {
     "code": "validation.rule.media.type.image.common",
     "exception": "Media type must be 'image/jpeg', 'image/webp', 'image/png', or 'image/svg+xml'."
    }
  },

  {
   "code": "media.type.image.raster.common",
   "description": "Media type, common raster images.",
   "pattern": "/^(?:image\\/(?:jpeg|webp|png))?$/is",

   "exception":
    {
     "code": "validation.rule.media.type.image.raster.common",
     "exception": "Media type must be 'image/jpeg', 'image/webp', or 'image/png'."
    }
  },

  {
   "code": "media.type.image.photo.common",
   "description": "Media type, common photo images.",
   "pattern": "/^(?:image\\/(?:jpeg|webp))?$/is",

   "exception":
    {
     "code": "validation.rule.media.type.image.photo.common",
     "exception": "Media type must be 'image/jpeg', 'image/webp'."
    }
  },

  {
   "code": "media.type.image.jpeg",
   "description": "Media type, JPEG image ('image/jpeg').",
   "pattern": "/^(?:image\\/(?:jpeg))?$/is",

   "exception":
    {
     "code": "validation.rule.media.type.image.jpeg",
     "exception": "Media type must be 'image/jpeg'."
    }
  },

  {
   "code": "media.type.application.pdf",
   "description": "Media type, PDF document ('application/pdf').",
   "pattern": "/^(?:application\\/(?:pdf))?$/is",

   "exception":
    {
     "code": "validation.rule.media.type.application.pdf",
     "exception": "Media type must be 'application/pdf'."
    }
  },

  {
   "code": "name.human.full",
   "description": "Human names (full).",
   "transform": "(code)",
   "pattern": "/^[\\p{L}\\p{N}' -]*$/su",

   "exception":
    {
     "code": "validation.rule.name.human.full",
     "exception": "Personal names may only contain alphanumeric characters, spaces, and dashes."
    }
  },

  {
   "code": "name.human.initial",
   "description": "Human names with initials.",
   "transform": "(code)",
   "pattern": "/^[\\p{L}\\p{N}' .-]*$/su",

   "exception":
    {
     "code": "validation.rule.name.human.initial",
     "exception": "Personal names may only contain alphanumeric characters, spaces, dashes, and dots."
    }
  },

  {
   "code": "name.relaxed",
   "description": "Non-human names like names for organizations, books, etc.",
   "transform": "(code)",
   "pattern": "/^[\\u{0080}-\\u{00FF}\\u{0100}-\\u{017F}\\u{0180}-\\u{024F}\\u{0250}-\\u{02AF}\\u{02B0}-\\u{02FF}\\u{0370}-\\u{03FF}\\u{0400}-\\u{04FF}\\u{0500}-\\u{052F}\\u{0530}-\\u{058F}\\u{0590}-\\u{05FF}\\u{0600}-\\u{06FF}\\u{0700}-\\u{074F}\\u{0750}-\\u{077F}\\u{0780}-\\u{07BF}\\u{07C0}-\\u{07FF}\\u{0800}-\\u{083F}\\u{0840}-\\u{085F}\\u{0860}-\\u{086F}\\u{0870}-\\u{089F}\\u{08A0}-\\u{08FF}\\u{0900}-\\u{097F}\\u{0980}-\\u{09FF}\\u{0A00}-\\u{0A7F}\\u{0A80}-\\u{0AFF}\\u{0B00}-\\u{0B7F}\\u{0B80}-\\u{0BFF}\\u{0C00}-\\u{0C7F}\\u{0C80}-\\u{0CFF}\\u{0D00}-\\u{0D7F}\\u{0D80}-\\u{0DFF}\\u{0E00}-\\u{0E7F}\\u{0E80}-\\u{0EFF}\\u{0F00}-\\u{0FFF}\\u{1000}-\\u{109F}\\u{10A0}-\\u{10FF}\\u{1100}-\\u{11FF}\\u{1200}-\\u{137F}\\u{1380}-\\u{139F}\\u{13A0}-\\u{13FF}\\u{1400}-\\u{167F}\\u{1680}-\\u{169F}\\u{16A0}-\\u{16FF}\\u{1700}-\\u{171F}\\u{1720}-\\u{173F}\\u{1740}-\\u{175F}\\u{1760}-\\u{177F}\\u{1780}-\\u{17FF}\\u{1800}-\\u{18AF}\\u{18B0}-\\u{18FF}\\u{1900}-\\u{194F}\\u{1950}-\\u{197F}\\u{1980}-\\u{19DF}\\u{19E0}-\\u{19FF}\\u{1A00}-\\u{1A1F}\\u{1A20}-\\u{1AAF}\\u{1B00}-\\u{1B7F}\\u{1B80}-\\u{1BBF}\\u{1BC0}-\\u{1BFF}\\u{1C00}-\\u{1C4F}\\u{1C50}-\\u{1C7F}\\u{1C80}-\\u{1C8F}\\u{1C90}-\\u{1CBF}\\u{1CC0}-\\u{1CCF}\\u{1CD0}-\\u{1CFF}\\u{1D00}-\\u{1D7F}\\u{1D80}-\\u{1DBF}\\u{1E00}-\\u{1EFF}\\u{1F00}-\\u{1FFF}\\u{2000}-\\u{206F}\\u{2070}-\\u{209F}\\u{20A0}-\\u{20CF}\\u{2150}-\\u{218F}\\u{2460}-\\u{24FF}\\u{2580}-\\u{259F}\\u{25A0}-\\u{25FF}\\u{2700}-\\u{27BF}\\u{2800}-\\u{28FF}\\u{2C00}-\\u{2C5F}\\u{2C60}-\\u{2C7F}\\u{2C80}-\\u{2CFF}\\u{2D00}-\\u{2D2F}\\u{2D30}-\\u{2D7F}\\u{2D80}-\\u{2DDF}\\u{2DE0}-\\u{2DFF}\\u{2E00}-\\u{2E7F}\\u{2E80}-\\u{2EFF}\\u{2F00}-\\u{2FDF}\\u{2FF0}-\\u{2FFF}\\u{3000}-\\u{303F}\\u{3040}-\\u{309F}\\u{30A0}-\\u{30FF}\\u{3100}-\\u{312F}\\u{3130}-\\u{318F}\\u{3190}-\\u{319F}\\u{31A0}-\\u{31BF}\\u{31C0}-\\u{31EF}\\u{31F0}-\\u{31FF}\\u{3200}-\\u{32FF}\\u{3300}-\\u{33FF}\\u{3400}-\\u{4DBF}\\u{4DC0}-\\u{4DFF}\\u{4E00}-\\u{9FFF}\\u{A000}-\\u{A48F}\\u{A490}-\\u{A4CF}\\u{A4D0}-\\u{A4FF}\\u{A500}-\\u{A63F}\\u{A640}-\\u{A69F}\\u{A6A0}-\\u{A6FF}\\u{A700}-\\u{A71F}\\u{A720}-\\u{A7FF}\\u{A800}-\\u{A82F}\\u{A830}-\\u{A83F}\\u{A840}-\\u{A87F}\\u{A880}-\\u{A8DF}\\u{A8E0}-\\u{A8FF}\\u{A900}-\\u{A92F}\\u{A930}-\\u{A95F}\\u{A960}-\\u{A97F}\\u{A980}-\\u{A9DF}\\u{A9E0}-\\u{A9FF}\\u{AA00}-\\u{AA5F}\\u{AA60}-\\u{AA7F}\\u{AA80}-\\u{AADF}\\u{AAE0}-\\u{AAFF}\\u{AB00}-\\u{AB2F}\\u{AB30}-\\u{AB6F}\\u{AB70}-\\u{ABBF}\\u{ABC0}-\\u{ABFF}\\u{AC00}-\\u{D7AF}\\u{D7B0}-\\u{D7FF}\\u{D800}-\\u{DB7F}\\u{DB80}-\\u{DBFF}\\u{DC00}-\\u{DFFF}\\u{F900}-\\u{FAFF}\\u{FB00}-\\u{FB4F}\\u{FB50}-\\u{FDFF}\\u{FE00}-\\u{FE0F}\\u{FE10}-\\u{FE1F}\\u{FE30}-\\u{FE4F}\\u{FE50}-\\u{FE6F}\\u{FE70}-\\u{FEFF}\\u{FF00}-\\u{FFEF}\\u{10100}-\\u{1013F}\\u{10140}-\\u{1018F}\\u{101D0}-\\u{101FF}\\u{10280}-\\u{1029F}\\u{102A0}-\\u{102DF}\\u{102E0}-\\u{102FF}\\u{10330}-\\u{1034F}\\u{10380}-\\u{1039F}\\u{10400}-\\u{1044F}\\u{10450}-\\u{1047F}\\u{10480}-\\u{104AF}\\u{104B0}-\\u{104FF}\\u{10500}-\\u{1052F}\\u{10530}-\\u{1056F}\\u{10570}-\\u{105BF}\\u{10780}-\\u{107BF}\\u{10800}-\\u{1083F}\\u{10840}-\\u{1085F}\\u{10860}-\\u{1087F}\\u{10880}-\\u{108AF}\\u{108E0}-\\u{108FF}\\u{10900}-\\u{1091F}\\u{10920}-\\u{1093F}\\u{10980}-\\u{1099F}\\u{109A0}-\\u{109FF}\\u{10A00}-\\u{10A5F}\\u{10AC0}-\\u{10AFF}\\u{10B00}-\\u{10B3F}\\u{10B40}-\\u{10B5F}\\u{10B60}-\\u{10B7F}\\u{10B80}-\\u{10BAF}\\u{10D00}-\\u{10D3F}\\u{10E60}-\\u{10E7F}\\u{10E80}-\\u{10EBF}\\u{10EC0}-\\u{10EFF}\\u{10F30}-\\u{10F6F}\\u{10FB0}-\\u{10FDF}\\u{10FE0}-\\u{10FFF}\\u{11000}-\\u{1107F}\\u{11080}-\\u{110CF}\\u{110D0}-\\u{110FF}\\u{11100}-\\u{1114F}\\u{11150}-\\u{1117F}\\u{11180}-\\u{111DF}\\u{111E0}-\\u{111FF}\\u{11200}-\\u{1124F}\\u{11280}-\\u{112AF}\\u{112B0}-\\u{112FF}\\u{11300}-\\u{1137F}\\u{11400}-\\u{1147F}\\u{11480}-\\u{114DF}\\u{11580}-\\u{115FF}\\u{11600}-\\u{1165F}\\u{11660}-\\u{1167F}\\u{11680}-\\u{116CF}\\u{11700}-\\u{1174F}\\u{11800}-\\u{1184F}\\u{118A0}-\\u{118FF}\\u{11900}-\\u{1195F}\\u{119A0}-\\u{119FF}\\u{11A00}-\\u{11A4F}\\u{11A50}-\\u{11AAF}\\u{11AB0}-\\u{11ABF}\\u{11AC0}-\\u{11AFF}\\u{11B00}-\\u{11B5F}\\u{11C00}-\\u{11C6F}\\u{11C70}-\\u{11CBF}\\u{11D00}-\\u{11D5F}\\u{11D60}-\\u{11DAF}\\u{11EE0}-\\u{11EFF}\\u{11F00}-\\u{11F5F}\\u{11FB0}-\\u{11FBF}\\u{11FC0}-\\u{11FFF}\\u{12000}-\\u{123FF}\\u{12400}-\\u{1247F}\\u{12480}-\\u{1254F}\\u{12F90}-\\u{12FFF}\\u{13000}-\\u{1342F}\\u{13430}-\\u{1345F}\\u{14400}-\\u{1467F}\\u{16800}-\\u{16A3F}\\u{16A40}-\\u{16A6F}\\u{16A70}-\\u{16ACF}\\u{16AD0}-\\u{16AFF}\\u{16B00}-\\u{16B8F}\\u{16E40}-\\u{16E9F}\\u{16F00}-\\u{16F9F}\\u{16FE0}-\\u{16FFF}\\u{17000}-\\u{187FF}\\u{18800}-\\u{18AFF}\\u{18B00}-\\u{18CFF}\\u{18D00}-\\u{18D7F}\\u{1AFF0}-\\u{1AFFF}\\u{1B000}-\\u{1B0FF}\\u{1B100}-\\u{1B12F}\\u{1B130}-\\u{1B16F}\\u{1B170}-\\u{1B2FF}\\u{1BC00}-\\u{1BC9F}\\u{1BCA0}-\\u{1BCAF}\\u{1D2C0}-\\u{1D2DF}\\u{1D2E0}-\\u{1D2FF}\\u{1D300}-\\u{1D35F}\\u{1D360}-\\u{1D37F}\\u{1D800}-\\u{1DAAF}\\u{1DF00}-\\u{1DFFF}\\u{1E000}-\\u{1E02F}\\u{1E030}-\\u{1E08F}\\u{1E100}-\\u{1E14F}\\u{1E290}-\\u{1E2BF}\\u{1E2C0}-\\u{1E2FF}\\u{1E4D0}-\\u{1E4FF}\\u{1E7E0}-\\u{1E7FF}\\u{1E800}-\\u{1E8DF}\\u{1E900}-\\u{1E95F}\\u{1EC70}-\\u{1ECBF}\\u{1ED00}-\\u{1ED4F}\\u{1F000}-\\u{1F02F}\\u{1F030}-\\u{1F09F}\\u{1F100}-\\u{1F1FF}\\u{1F200}-\\u{1F2FF}\\u{1F650}-\\u{1F67F}\\u{1F780}-\\u{1F7FF}\\u{1F900}-\\u{1F9FF}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B73F}\\u{2B740}-\\u{2B81F}\\u{2B820}-\\u{2CEAF}\\u{2CEB0}-\\u{2EBEF}\\u{2EBF0}-\\u{2EE5F}\\u{2F800}-\\u{2FA1F}\\u{30000}-\\u{3134F}\\u{31350}-\\u{323AF}\\u{E0100}-\\u{E01EF}\\w\\d !@#$%^&*()_+=[\\]{}\\\\|;:'\",./?-]*$/su",

   "exception":
    {
     "code": "validation.rule.name.relaxed",
     "exception": "May only contain common characters, and a wide variety of special characters."
    }
  },

  {
   "code": "no_space",
   "description": "No whitespace characters.",
   "pattern": "/^[^\\s]*$/s",

   "exception":
    {
     "code": "validation.rule.no_space",
     "exception": "Whitespace characters are not allowed."
    }
  },

  {
   "code": "number.absolute",
   "description": "Absolute number.",
   "transform": "(code)"
  },

  {
   "code": "number.round",
   "description": "Round number.",
   "transform": "(code)"
  },

  {
   "code": "pem.certificate",
   "description": "PEM encoded certificate.",
   "pattern": "/^(?:-----BEGIN CERTIFICATE-----\\s+[a-zA-Z0-9+/=_-\\s]+?\\s+-----END CERTIFICATE-----\\s*)?$/s",

   "exception":
    {
     "code": "validation.rule.pem.certificate",
     "exception": "Must be a valid PEM encoded certificate string."
    },

   "test": "(code)"
  },

  {
   "code": "pem.key.private",
   "description": "PEM encoded private key.",
   "pattern": "/^(?:-----BEGIN ([A-Z]+ )?PRIVATE KEY-----\\s+[a-zA-Z0-9+/=_-\\s]+?\\s+-----END \\1PRIVATE KEY-----\\s*)?$/s",

   "exception":
    {
     "code": "validation.rule.pem.key.private",
     "exception": "Must be a valid PEM encoded private key."
    },

   "test": "(code)"
  },

  {
   "code": "permission",
   "description": "Permission code.",
   "pattern": "/^(?:(portal|user|group|profile|form|screening|screenee)\\.(full|create|read|write|delete))?$/s",

   "exception":
    {
     "code": "validation.rule.permission",
     "exception": "Must be a valid permission code."
    }
  },

  {
   "code": "range",
   "description": "Specify a numeric range.",
   "test": "(code)"
  },

  {
   "code": "required",
   "description": "Required field.",
   "test": "(code)"
  },

  {
   "code": "trim",
   "description": "Trim white space from string.",
   "transform": "(code)"
  },

  {
   "code": "uppercase",
   "description": "Upper-case string.",
   "transform": "(code)"
  },

  {
   "code": "lowercase",
   "description": "Lower-case string.",
   "transform": "(code)"
  },

  {
   "code": "description",
   "description": "Descriptions.",
   "transform": "(code)",
   "pattern": "/^[\\u{0080}-\\u{00FF}\\u{0100}-\\u{017F}\\u{0180}-\\u{024F}\\u{0250}-\\u{02AF}\\u{02B0}-\\u{02FF}\\u{0370}-\\u{03FF}\\u{0400}-\\u{04FF}\\u{0500}-\\u{052F}\\u{0530}-\\u{058F}\\u{0590}-\\u{05FF}\\u{0600}-\\u{06FF}\\u{0700}-\\u{074F}\\u{0750}-\\u{077F}\\u{0780}-\\u{07BF}\\u{07C0}-\\u{07FF}\\u{0800}-\\u{083F}\\u{0840}-\\u{085F}\\u{0860}-\\u{086F}\\u{0870}-\\u{089F}\\u{08A0}-\\u{08FF}\\u{0900}-\\u{097F}\\u{0980}-\\u{09FF}\\u{0A00}-\\u{0A7F}\\u{0A80}-\\u{0AFF}\\u{0B00}-\\u{0B7F}\\u{0B80}-\\u{0BFF}\\u{0C00}-\\u{0C7F}\\u{0C80}-\\u{0CFF}\\u{0D00}-\\u{0D7F}\\u{0D80}-\\u{0DFF}\\u{0E00}-\\u{0E7F}\\u{0E80}-\\u{0EFF}\\u{0F00}-\\u{0FFF}\\u{1000}-\\u{109F}\\u{10A0}-\\u{10FF}\\u{1100}-\\u{11FF}\\u{1200}-\\u{137F}\\u{1380}-\\u{139F}\\u{13A0}-\\u{13FF}\\u{1400}-\\u{167F}\\u{1680}-\\u{169F}\\u{16A0}-\\u{16FF}\\u{1700}-\\u{171F}\\u{1720}-\\u{173F}\\u{1740}-\\u{175F}\\u{1760}-\\u{177F}\\u{1780}-\\u{17FF}\\u{1800}-\\u{18AF}\\u{18B0}-\\u{18FF}\\u{1900}-\\u{194F}\\u{1950}-\\u{197F}\\u{1980}-\\u{19DF}\\u{19E0}-\\u{19FF}\\u{1A00}-\\u{1A1F}\\u{1A20}-\\u{1AAF}\\u{1B00}-\\u{1B7F}\\u{1B80}-\\u{1BBF}\\u{1BC0}-\\u{1BFF}\\u{1C00}-\\u{1C4F}\\u{1C50}-\\u{1C7F}\\u{1C80}-\\u{1C8F}\\u{1C90}-\\u{1CBF}\\u{1CC0}-\\u{1CCF}\\u{1CD0}-\\u{1CFF}\\u{1D00}-\\u{1D7F}\\u{1D80}-\\u{1DBF}\\u{1E00}-\\u{1EFF}\\u{1F00}-\\u{1FFF}\\u{2000}-\\u{206F}\\u{2070}-\\u{209F}\\u{20A0}-\\u{20CF}\\u{2150}-\\u{218F}\\u{2460}-\\u{24FF}\\u{2580}-\\u{259F}\\u{25A0}-\\u{25FF}\\u{2700}-\\u{27BF}\\u{2800}-\\u{28FF}\\u{2C00}-\\u{2C5F}\\u{2C60}-\\u{2C7F}\\u{2C80}-\\u{2CFF}\\u{2D00}-\\u{2D2F}\\u{2D30}-\\u{2D7F}\\u{2D80}-\\u{2DDF}\\u{2DE0}-\\u{2DFF}\\u{2E00}-\\u{2E7F}\\u{2E80}-\\u{2EFF}\\u{2F00}-\\u{2FDF}\\u{2FF0}-\\u{2FFF}\\u{3000}-\\u{303F}\\u{3040}-\\u{309F}\\u{30A0}-\\u{30FF}\\u{3100}-\\u{312F}\\u{3130}-\\u{318F}\\u{3190}-\\u{319F}\\u{31A0}-\\u{31BF}\\u{31C0}-\\u{31EF}\\u{31F0}-\\u{31FF}\\u{3200}-\\u{32FF}\\u{3300}-\\u{33FF}\\u{3400}-\\u{4DBF}\\u{4DC0}-\\u{4DFF}\\u{4E00}-\\u{9FFF}\\u{A000}-\\u{A48F}\\u{A490}-\\u{A4CF}\\u{A4D0}-\\u{A4FF}\\u{A500}-\\u{A63F}\\u{A640}-\\u{A69F}\\u{A6A0}-\\u{A6FF}\\u{A700}-\\u{A71F}\\u{A720}-\\u{A7FF}\\u{A800}-\\u{A82F}\\u{A830}-\\u{A83F}\\u{A840}-\\u{A87F}\\u{A880}-\\u{A8DF}\\u{A8E0}-\\u{A8FF}\\u{A900}-\\u{A92F}\\u{A930}-\\u{A95F}\\u{A960}-\\u{A97F}\\u{A980}-\\u{A9DF}\\u{A9E0}-\\u{A9FF}\\u{AA00}-\\u{AA5F}\\u{AA60}-\\u{AA7F}\\u{AA80}-\\u{AADF}\\u{AAE0}-\\u{AAFF}\\u{AB00}-\\u{AB2F}\\u{AB30}-\\u{AB6F}\\u{AB70}-\\u{ABBF}\\u{ABC0}-\\u{ABFF}\\u{AC00}-\\u{D7AF}\\u{D7B0}-\\u{D7FF}\\u{D800}-\\u{DB7F}\\u{DB80}-\\u{DBFF}\\u{DC00}-\\u{DFFF}\\u{F900}-\\u{FAFF}\\u{FB00}-\\u{FB4F}\\u{FB50}-\\u{FDFF}\\u{FE00}-\\u{FE0F}\\u{FE10}-\\u{FE1F}\\u{FE30}-\\u{FE4F}\\u{FE50}-\\u{FE6F}\\u{FE70}-\\u{FEFF}\\u{FF00}-\\u{FFEF}\\u{10100}-\\u{1013F}\\u{10140}-\\u{1018F}\\u{101D0}-\\u{101FF}\\u{10280}-\\u{1029F}\\u{102A0}-\\u{102DF}\\u{102E0}-\\u{102FF}\\u{10330}-\\u{1034F}\\u{10380}-\\u{1039F}\\u{10400}-\\u{1044F}\\u{10450}-\\u{1047F}\\u{10480}-\\u{104AF}\\u{104B0}-\\u{104FF}\\u{10500}-\\u{1052F}\\u{10530}-\\u{1056F}\\u{10570}-\\u{105BF}\\u{10780}-\\u{107BF}\\u{10800}-\\u{1083F}\\u{10840}-\\u{1085F}\\u{10860}-\\u{1087F}\\u{10880}-\\u{108AF}\\u{108E0}-\\u{108FF}\\u{10900}-\\u{1091F}\\u{10920}-\\u{1093F}\\u{10980}-\\u{1099F}\\u{109A0}-\\u{109FF}\\u{10A00}-\\u{10A5F}\\u{10AC0}-\\u{10AFF}\\u{10B00}-\\u{10B3F}\\u{10B40}-\\u{10B5F}\\u{10B60}-\\u{10B7F}\\u{10B80}-\\u{10BAF}\\u{10D00}-\\u{10D3F}\\u{10E60}-\\u{10E7F}\\u{10E80}-\\u{10EBF}\\u{10EC0}-\\u{10EFF}\\u{10F30}-\\u{10F6F}\\u{10FB0}-\\u{10FDF}\\u{10FE0}-\\u{10FFF}\\u{11000}-\\u{1107F}\\u{11080}-\\u{110CF}\\u{110D0}-\\u{110FF}\\u{11100}-\\u{1114F}\\u{11150}-\\u{1117F}\\u{11180}-\\u{111DF}\\u{111E0}-\\u{111FF}\\u{11200}-\\u{1124F}\\u{11280}-\\u{112AF}\\u{112B0}-\\u{112FF}\\u{11300}-\\u{1137F}\\u{11400}-\\u{1147F}\\u{11480}-\\u{114DF}\\u{11580}-\\u{115FF}\\u{11600}-\\u{1165F}\\u{11660}-\\u{1167F}\\u{11680}-\\u{116CF}\\u{11700}-\\u{1174F}\\u{11800}-\\u{1184F}\\u{118A0}-\\u{118FF}\\u{11900}-\\u{1195F}\\u{119A0}-\\u{119FF}\\u{11A00}-\\u{11A4F}\\u{11A50}-\\u{11AAF}\\u{11AB0}-\\u{11ABF}\\u{11AC0}-\\u{11AFF}\\u{11B00}-\\u{11B5F}\\u{11C00}-\\u{11C6F}\\u{11C70}-\\u{11CBF}\\u{11D00}-\\u{11D5F}\\u{11D60}-\\u{11DAF}\\u{11EE0}-\\u{11EFF}\\u{11F00}-\\u{11F5F}\\u{11FB0}-\\u{11FBF}\\u{11FC0}-\\u{11FFF}\\u{12000}-\\u{123FF}\\u{12400}-\\u{1247F}\\u{12480}-\\u{1254F}\\u{12F90}-\\u{12FFF}\\u{13000}-\\u{1342F}\\u{13430}-\\u{1345F}\\u{14400}-\\u{1467F}\\u{16800}-\\u{16A3F}\\u{16A40}-\\u{16A6F}\\u{16A70}-\\u{16ACF}\\u{16AD0}-\\u{16AFF}\\u{16B00}-\\u{16B8F}\\u{16E40}-\\u{16E9F}\\u{16F00}-\\u{16F9F}\\u{16FE0}-\\u{16FFF}\\u{17000}-\\u{187FF}\\u{18800}-\\u{18AFF}\\u{18B00}-\\u{18CFF}\\u{18D00}-\\u{18D7F}\\u{1AFF0}-\\u{1AFFF}\\u{1B000}-\\u{1B0FF}\\u{1B100}-\\u{1B12F}\\u{1B130}-\\u{1B16F}\\u{1B170}-\\u{1B2FF}\\u{1BC00}-\\u{1BC9F}\\u{1BCA0}-\\u{1BCAF}\\u{1D2C0}-\\u{1D2DF}\\u{1D2E0}-\\u{1D2FF}\\u{1D300}-\\u{1D35F}\\u{1D360}-\\u{1D37F}\\u{1D800}-\\u{1DAAF}\\u{1DF00}-\\u{1DFFF}\\u{1E000}-\\u{1E02F}\\u{1E030}-\\u{1E08F}\\u{1E100}-\\u{1E14F}\\u{1E290}-\\u{1E2BF}\\u{1E2C0}-\\u{1E2FF}\\u{1E4D0}-\\u{1E4FF}\\u{1E7E0}-\\u{1E7FF}\\u{1E800}-\\u{1E8DF}\\u{1E900}-\\u{1E95F}\\u{1EC70}-\\u{1ECBF}\\u{1ED00}-\\u{1ED4F}\\u{1F000}-\\u{1F02F}\\u{1F030}-\\u{1F09F}\\u{1F100}-\\u{1F1FF}\\u{1F200}-\\u{1F2FF}\\u{1F650}-\\u{1F67F}\\u{1F780}-\\u{1F7FF}\\u{1F900}-\\u{1F9FF}\\u{20000}-\\u{2A6DF}\\u{2A700}-\\u{2B73F}\\u{2B740}-\\u{2B81F}\\u{2B820}-\\u{2CEAF}\\u{2CEB0}-\\u{2EBEF}\\u{2EBF0}-\\u{2EE5F}\\u{2F800}-\\u{2FA1F}\\u{30000}-\\u{3134F}\\u{31350}-\\u{323AF}\\u{E0100}-\\u{E01EF}\\w\\s`~!@#$%^&*()_=+[\\]{}\\\\|;:'\",.<>/?-]*$/su",

   "exception":
    {
     "code": "validation.rule.description",
     "exception": "May only contain common characters, and a wide variety of special characters."
    }
  },

  {
   "code": "boolean",
   "description": "Ensure `Boolean`.",
   "transform": "(code)"
  },

  {
   "code": "number",
   "description": "Ensure `Number`.",
   "transform": "(code)"
  },

  {
   "code": "string",
   "description": "Ensure `String`.",
   "transform": "(code)"
  },

  {
   "code": "date",
   "description": "Ensure `Date`.",
   "transform": "(code)"
  },

  {
   "code": "validation.rule.code",
   "description": "Validation rule code.",
   "test": "(code)"
  }

]